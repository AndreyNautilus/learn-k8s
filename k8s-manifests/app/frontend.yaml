apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: app-frontend  # for ReplicaSet to know which pods to manage
  template:
    metadata:
      labels:
        app: app-frontend
    spec:
      containers:
        - name: frontend
          resources:
            # requests are taken from 'kubectl top pods -n=dev' and rounded up
            # requests are equal to limits
            limits:
              # equal to requests
              cpu: 100m
              memory: 100Mi
          env:
            - name: BACKEND_ENDPOINT
              value: "http://app-backend:8000"
            # - name: BACKEND_USERNAME
            #   valueFrom:
            #     secretKeyRef:
            #       key: username
            #       name: app-secret
            # - name: BACKEND_PASSWORD
            #   valueFrom:
            #     secretKeyRef:
            #       key: password
            #       name: app-secret
            # - name: BACKEND_SECRET
            #   value: $(BACKEND_USERNAME)/$(BACKEND_PASSWORD)
          image: app-frontend:1.0.0
          ports:
            - name: frontend
              containerPort: 8000
          startupProbe:
            httpGet:
              path: /about
              port: frontend
            failureThreshold: 30
            periodSeconds: 2
          livenessProbe:
            httpGet:
              path: /about
              port: frontend
            failureThreshold: 1  # consider dead after first failure
            periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: app-frontend
spec:
  #type: LoadBalancer
  selector:
    app: app-frontend
  ports:
    - name: frontend
      protocol: TCP
      port: 80
      targetPort: frontend  # see exposed port in container
