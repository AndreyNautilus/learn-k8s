apiVersion: v1
kind: ConfigMap
metadata:
  name: app-backend-config
data:
  url: app-db  # see db.yaml
---
apiVersion: v1
kind: Secret
metadata:
  name: app-backend-secret
type: Opaque
data:  # base64-encoded, not encrypted
  db-username: YmFja2VuZA==
  # TODO: how to securely generate a random root password?
  db-password: bXktc3FsLWJhY2tlbmQtcGFzc3dvcmQ=
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-backend
  labels:
    app: app-backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: app-backend  # for ReplicaSet to know which pods to manage
  template:
    metadata:
      labels:
        app: app-backend
    spec:
      containers:
        - name: backend
          resources:
            # requests are taken from 'kubectl top pods -n=dev' and rounded up
            # requests are equal to limits
            limits:
              cpu: 500m
              memory: 200Mi
          env:
            # pod identification
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: WORKER_NAME
              value: $(POD_NAME)
            # db connection
            - name: DATABASE_URL
              valueFrom:
                configMapKeyRef:
                  name: app-backend-config
                  key: url
            - name: DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: app-backend-secret
                  key: db-username
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: app-backend-secret
                  key: db-password
          image: app-backend:1.0.0
          ports:
            - name: web
              containerPort: 8000
          startupProbe:
            httpGet:
              path: /info
              port: web
            failureThreshold: 30
            periodSeconds: 2
          livenessProbe:
            httpGet:
              path: /info
              port: web
            failureThreshold: 1  # consider dead after first failure
            periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: app-backend
  labels:
    app: app-backend
spec:
  selector:
    app: app-backend
  ports:
    - name: web
      protocol: TCP
      port: 80
      targetPort: web  # see exposed port in container
