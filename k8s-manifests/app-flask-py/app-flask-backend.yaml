apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment-app-flask-backend
  namespace: dev
spec:
  replicas: 2
  selector:
    matchLabels:
      app: app-flask-backend  # for ReplicaSet to know which pods to manage
  template:
    metadata:
      labels:
        app: app-flask-backend
    spec:
      containers:
        - name: backend
          # TODO: how to measure required resources?
          # resources:
          #   requests:
          #     cpu: "0.5"        # https://kubernetes.io/docs/tasks/configure-pod-container/assign-cpu-resource/
          #     memory: "100Mi"   # https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/
          #   limits:
          #     cpu: "1"          # https://kubernetes.io/docs/tasks/configure-pod-container/assign-cpu-resource/
          #     memory: "200Mi"   # https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: COMMENT
              valueFrom:
                configMapKeyRef:
                  key: purpose
                  name: configmap-dev
            - name: WORKER_NAME
              value: $(POD_NAME) - $(COMMENT)
          image: app-flask-py:1.0.0  # don't use 'latest' as it wants to go to DockerHub for the latest
          ports:
            - name: backend
              containerPort: 8000
---
apiVersion: v1
kind: Service
metadata:
  name: service-app-flask-backend
  namespace: dev
spec:
  selector:
    app: app-flask-backend
  ports:
    - name: backend
      protocol: TCP
      port: 8000
      targetPort: backend  # see exposed port in container
