apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment-app-flask-frontend
  namespace: dev
spec:
  replicas: 2
  selector:
    matchLabels:
      app: app-flask-frontend  # for ReplicaSet to know which pods to manage
  template:
    metadata:
      labels:
        app: app-flask-frontend
    spec:
      containers:
        - name: frontend
          env:
            - name: BACKEND_ENDPOINT
              value: http://service-app-flask-backend:8000/backend/time
            - name: BACKEND_USERNAME
              valueFrom:
                secretKeyRef:
                  key: username
                  name: secret-dev
            - name: BACKEND_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: secret-dev
            - name: BACKEND_SECRET
              value: $(BACKEND_USERNAME)/$(BACKEND_PASSWORD)
          image: app-flask-py:1.0.0
          ports:
            - name: frontend
              containerPort: 8000
---
apiVersion: v1
kind: Service
metadata:
  name: service-app-flask-frontend
  namespace: dev
spec:
  type: LoadBalancer
  selector:
    app: app-flask-frontend
  ports:
    - name: frontend
      protocol: TCP
      port: 80
      targetPort: frontend  # see exposed port in container
